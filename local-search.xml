<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>认真学一下C语言（一）</title>
    <link href="/2021/04/08/%E8%AE%A4%E7%9C%9F%E5%AD%A6%E4%B8%80%E4%B8%8BC%E8%AF%AD%E8%A8%80/"/>
    <url>/2021/04/08/%E8%AE%A4%E7%9C%9F%E5%AD%A6%E4%B8%80%E4%B8%8BC%E8%AF%AD%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><em>来到新的博客，写前言的习惯还是改不掉，哈哈</em><br>咳咳，在正式开始为考研复习数据结构之前，我希望可以将C语言正式地过一遍，所以就有了这篇文章，所以就有了这个系列，加油！</p><br/><hr/><h1 id="概述C语言"><a href="#概述C语言" class="headerlink" title="概述C语言"></a>概述C语言</h1><h2 id="什么是C语言"><a href="#什么是C语言" class="headerlink" title="什么是C语言"></a>什么是C语言</h2><p>C语言是一种用途广泛、功能强大、使用灵活的过程性（procedural）编程语言，即可用于编写应用软件，又可以用于编写系统软件。</p><blockquote><p>系统软件系统软件是负责管理计算机系统中各种独立的硬件，使得它们可以协调工作。系统软件使得计算机使用者和其他软件将计算机当作一个整体而不需要顾及到底层每个硬件是如何工作的。一般来讲，系统软件包括操作系统和一系列基本的工具（比如编译器，数据库管理，存储器格式化，文件系统管理，用户身份验证，驱动管理，网络连接等方面的工具）。<br>应用软件应用软件是为了某种特定的用途而被开发的软件。它可以是一个特定的程序，比如一个图像浏览器。也可以是一组功能联系紧密，可以互相协作的程序的集合，比如微软的Office软件。也可以是一个由众多独立程序组成的庞大的软件系统，比如数据库管理系统。较常见的有文字处理软件 如WPS、Word等 信息管理软件 辅助设计软件 如AutoCAD 实时控制软件 教育与娱乐软件等。</p></blockquote><h2 id="C语言的特点"><a href="#C语言的特点" class="headerlink" title="C语言的特点"></a>C语言的特点</h2><p>C语言有以下一些主要特点：</p><ul><li>语言简洁、紧凑、使用方便、灵活</li><li>运算符丰富</li><li>数据类型丰富</li><li>具有结构化的控制语句</li><li>语法限制不太严格，程序设计自由度大</li><li>C语言允许直接访问物理地址，能进行位(bit)操作，能实现汇编语言的大部分功能，可以直接对硬件进行操作。</li><li>用C语言编写的程序移植性好。</li><li>生成目标代码质量高，程序执行效率高</li></ul><br/><hr/><h1 id="C语言的结构特点"><a href="#C语言的结构特点" class="headerlink" title="C语言的结构特点"></a>C语言的结构特点</h1><h2 id="一个程序由一个或多个源程序文件组成"><a href="#一个程序由一个或多个源程序文件组成" class="headerlink" title="一个程序由一个或多个源程序文件组成"></a>一个程序由一个或多个源程序文件组成</h2><p>一个程序由一个或多个源程序文件组成，在一个源程序文件中往往还可以包括3个部分：</p><ol><li>预处理指令</li><li>全局声明</li><li>函数定义</li></ol><h2 id="函数是C程序的主要组成部分"><a href="#函数是C程序的主要组成部分" class="headerlink" title="函数是C程序的主要组成部分"></a>函数是C程序的主要组成部分</h2><p>函数是C程序的主要组成部分，函数是C程序的基本单位，编写C程序的主要功能就是编写一个个函数。</p><p>当程序规模较大的时候，所包含的函数数量较多，如果把所有的函数都放在同一个源程序文件中，则此文件显得太大，不便于编译和调试。为了便于调试和管理，可以使一个程序包含若干个源程序文件，每个源程序文件又包含若干个函数。一个源程序文件就是一个函数模块，即将一个程序分为若干个程序模块。<br/><br>在进行编译时是以源程序文件为对象进行的。在分别对各源程序文件进行编译并得到相应的目标程序后，再将这些目标程序链接成一个统一的二进制的可执行的程序（即编译四部曲“预编译、编译、汇编、链接”中的最后一步）。</p><h2 id="一个函数包括两个部分"><a href="#一个函数包括两个部分" class="headerlink" title="一个函数包括两个部分"></a>一个函数包括两个部分</h2><p>一个函数包括两个部分：</p><ol><li>函数首部：函数的第一行，包括函数名、函数类型、函数属性、函数参数（形式参数）名、参数类型</li><li>函数体</li></ol><h2 id="程序总是从main函数开始执行的"><a href="#程序总是从main函数开始执行的" class="headerlink" title="程序总是从main函数开始执行的"></a>程序总是从main函数开始执行的</h2><p>程序总是从main函数开始执行的。</p><h2 id="程序中对计算机的操作由函数中的C语句完成"><a href="#程序中对计算机的操作由函数中的C语句完成" class="headerlink" title="程序中对计算机的操作由函数中的C语句完成"></a>程序中对计算机的操作由函数中的C语句完成</h2><p>程序中对计算机的操作由函数中的C语句完成</p><h2 id="在每个数据声明和语句的最后必须是一个分号"><a href="#在每个数据声明和语句的最后必须是一个分号" class="headerlink" title="在每个数据声明和语句的最后必须是一个分号"></a>在每个数据声明和语句的最后必须是一个分号</h2><p>在每个数据声明和语句的最后必须是一个分号，分号是C语句的必要组成部分。</p><h2 id="C语言本身不提供输入输出语句"><a href="#C语言本身不提供输入输出语句" class="headerlink" title="C语言本身不提供输入输出语句"></a>C语言本身不提供输入输出语句</h2><p>输入和输出的操作都是由库函数scanf和printf等函数来完成的。C对输入输出实现“函数化”。由于输入输出操作涉及具体的计算机设备，把输入输出操作用库函数实现，就可以使C语言本身的规模最小，编译程序最简单，很容易在各种机器上实现，程序具有可移植性。</p><h2 id="程序应当包含注释"><a href="#程序应当包含注释" class="headerlink" title="程序应当包含注释"></a>程序应当包含注释</h2><p>一个好的程序应该有注释。</p>]]></content>
    
    
    <categories>
      
      <category>C复习计划</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C语言</tag>
      
      <tag>编程基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/04/06/hello-world/"/>
    <url>/2021/04/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
